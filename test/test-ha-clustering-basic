#!/usr/bin/env bash
set -o errexit -o nounset

. "$(dirname "$0")/helpers.sh"

readonly image="$1"
readonly series="$2"
readonly edition="$3"

not_supported_series=3.6

if (( ${series%%.*} > ${not_supported_series%%.*} || (${series%%.*} >= ${not_supported_series%%.*} && ${series##*.} >= ${not_supported_series##*.}) )) || [[ "${series}" == "2.3" ]]; then
  echo "Skipping: High-Availability Test not compatible pre 3.0 and removed post 3.5"
  exit 0
fi

if ! [[ "${edition}" == "enterprise" ]]; then
  echo "Skipping: High-Availability only available in enterprise"
  exit 0
fi

if ! which docker-compose >/dev/null; then
  echo "Skipping: no docker-compose in path"
  exit 0
fi

# Make a temp copy of compose file
mkdir -p tmp/out
readonly logs_id="$(pwgen -1 --no-capitalize 8 1)"
readonly compose_file="tmp/out/${logs_id}.yml"

cp "$(dirname "$0")/ha-cluster-compose.yml" "${compose_file}"

if [[ "${series}" == "3.0" ]]; then
  # Neo4j 3.0 series does not support [MG] type values for memory_heap_initial
  sed --in-place -e "s/NEO4J_dbms_memory_heap_initial__size=10M/NEO4J_dbms_memory_heap_initial__size=10/g" "${compose_file}"
fi

readonly cname="core-$(uuidgen)"
readonly rname="slave-$(uuidgen)"
readonly logs_dir="tmp/out/${logs_id}"

docker_compose_up "${image}" "${compose_file}" "${cname}" "${rname}" "$(pwd)/${logs_dir}"
readonly master_ip="$(docker_compose_ip "${cname}")"
readonly slave_ip="$(docker_compose_ip "${rname}")"
# Make sure master and read replica are up
echo "master: ${master_ip}"
echo "slave: ${slave_ip}"

echo "Waiting for up..."
neo4j_wait_for_ha_master "${master_ip}" "neo4j:neo" "120"
neo4j_wait_for_ha_slave "${slave_ip}" "neo4j:neo" "120"

echo "Creating node..."
# create node on master
neo4j_createnode "${master_ip}" "neo4j:neo"

echo "Reading node..."
# read back on slave
neo4j_readnode "${slave_ip}" "neo4j:neo" "30"
